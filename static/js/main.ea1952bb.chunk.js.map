{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","completed","fontStyle","color","opacity","textDecoration","this","props","todo","id","title","className","style","getStyle","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","Component","TodosList","todos","map","key","React","Header","padding","lineHeight","fontSize","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","trim","length","handleAddTodoItemProps","onSubmit","placeholder","TodoContainer","handleChange","delTodo","filter","addTodoItem","newTodo","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"4NA+BeA,E,uKA3BFC,GACL,OAAOA,EAAY,CACfC,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAChB,O,+BAEE,IAAD,SAC4BC,KAAKC,MAAMC,KAApCP,EADH,EACGA,UAAWQ,EADd,EACcA,GAAIC,EADlB,EACkBA,MACvB,OACI,wBAAIC,UAAU,aACV,2BACIC,MAAON,KAAKO,WACZC,KAAK,WACLC,QAASd,EACTe,SAAU,kBAAM,EAAKT,MAAMU,kBAAkBR,MAEjD,4BAAQS,QAAS,kBAAM,EAAKX,MAAMY,gBAAgBV,KAAlD,UACA,0BAAMG,MAAON,KAAKO,SAASZ,IACtBS,Q,GArBEU,aCiBRC,E,uKAhBD,IAAD,OACL,OACI,6BACKf,KAAKC,MAAMe,MAAMC,KAAI,SAAAf,GAAI,OACtB,kBAAC,EAAD,CACIgB,IAAKhB,EAAKC,GACVD,KAAMA,EACNS,kBAAmB,EAAKV,MAAMU,kBAC9BE,gBAAiB,EAAKZ,MAAMY,0B,GAT5BM,IAAML,WCefM,EAfA,WAKX,OACI,gCACI,wBAAId,MANQ,CAChBe,QAAS,SACTC,WAAY,QAIR,mBACA,uBAAGhB,MAAO,CAAEiB,SAAU,SAAtB,uD,OCyBGC,E,4MAjCXC,MAAQ,CACJrB,MAAO,I,EAEXM,SAAW,SAAAgB,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAGlCC,aAAe,SAAAL,GACXA,EAAEM,iBACE,EAAKP,MAAMrB,MAAM6B,OAAOC,QAAU,IAEtC,EAAKjC,MAAMkC,uBAAuB,EAAKV,MAAMrB,OAC7C,EAAKuB,SAAS,CACVvB,MAAO,O,uDAIX,OACI,0BAAMgC,SAAUpC,KAAK+B,aAAc1B,UAAU,kBACzC,2BACIG,KAAK,OACLH,UAAU,aACVgC,YAAY,cACZP,MAAO9B,KAAKyB,MAAMrB,MAClByB,KAAK,QACLnB,SAAUV,KAAKU,WAEnB,2BAAOF,KAAK,SAASH,UAAU,eAAeyB,MAAM,gB,GA7B5ChB,a,QC+DTwB,E,4MA1DXC,aAAe,SAAApC,GACX,EAAKwB,SAAS,CACVX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAAf,GAIxB,OAHIA,EAAKC,KAAOA,IACZD,EAAKP,WAAaO,EAAKP,WAEpBO,Q,EAInBsC,QAAU,SAAArC,GACN,EAAKwB,SAAS,CACVX,MAAM,YACC,EAAKS,MAAMT,MAAMyB,QAAO,SAAAvC,GACvB,OAAOA,EAAKC,KAAOA,S,EAKnCuC,YAAc,SAAAtC,GACV,IAAMuC,EAAU,CACZxC,GAAIyC,cACJxC,MAAOA,EACPT,WAAW,GAEf,EAAKgC,SAAS,CACVX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwB2B,O,EAGrClB,MAAQ,CACJT,MAAO,CACH,CACIb,GAAIyC,cACJxC,MAAO,gCACPT,WAAW,GAEf,CACIQ,GAAIyC,cACJxC,MAAO,kCACPT,WAAW,GAEf,CACIQ,GAAIyC,cACJxC,MAAO,wBACPT,WAAW,K,uDAKnB,OACI,yBAAKU,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW8B,uBAAwBnC,KAAK0C,cACxC,kBAAC,EAAD,CAAW1B,MAAOhB,KAAKyB,MAAMT,MAAOL,kBAAmBX,KAAKuC,aAAc1B,gBAAiBb,KAAKwC,e,GAtDpFrB,IAAML,W,MCClC+B,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.ea1952bb.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\n\r\nclass TodoItem extends Component {\r\n    getStyle(completed) {\r\n        return completed ? {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        } : null;\r\n    }\r\n    render() {\r\n        const { completed, id, title } = this.props.todo;\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input\r\n                    style={this.getStyle()}\r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={() => this.props.handleChangeProps(id)}\r\n                />\r\n                <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n                <span style={this.getStyle(completed)}>\r\n                    {title}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList","import React from \"react\"\r\n\r\n\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"2em\",\r\n    };\r\n    return (\r\n        <header>\r\n            <h1 style={headerStyle}>Simple Todo App</h1>\r\n            <p style={{ fontSize: \"19px\" }}>\r\n                Please add to-dos item(s) through the input field\r\n            </p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    };\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.title.trim().length <= 0)\r\n            return;\r\n        this.props.handleAddTodoItemProps(this.state.title);\r\n        this.setState({\r\n            title: \"\"\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Add todo...\"\r\n                    value={this.state.title}\r\n                    name=\"title\"\r\n                    onChange={this.onChange}\r\n                />\r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass TodoContainer extends React.Component {\r\n    handleChange = id => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        });\r\n    };\r\n    delTodo = id => {\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                    return todo.id !== id;\r\n                })\r\n            ]\r\n        });\r\n    };\r\n    addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        });\r\n    };\r\n    state = {\r\n        todos: [\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Setup development environment\",\r\n                completed: true\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Develop website and add content\",\r\n                completed: false\r\n            },\r\n            {\r\n                id: uuidv4(),\r\n                title: \"Deploy to live server\",\r\n                completed: false\r\n            }\r\n        ]\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <InputTodo handleAddTodoItemProps={this.addTodoItem} />\r\n                <TodosList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodoProps={this.delTodo} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}